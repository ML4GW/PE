# lightning.pytorch==2.1.3
seed_everything: 101588
trainer:
  accelerator: auto
  strategy: auto
  devices: auto
  profiler: "simple"
  logger:
    - class_path: lightning.pytorch.loggers.WandbLogger
      init_args:
        save_dir: "/home/ethan.marx/projects/PE/projects/sandbox/train/logs-cbc"
  max_epochs: 200
  check_val_every_n_epoch: 1
  benchmark: false
model:
  class_path: train.model.PEModel
  init_args:
    outdir: "/home/ethan.marx/projects/PE/projects/sandbox/train/logs-cbc/results"
    arch:
      class_path: train.architectures.flows.MaskedAutoRegressiveFlow
      init_args:
        hidden_features: 100
        num_transforms: 100
        num_blocks: 5
        context_dim: 128
        embedding_net: 
          class_path: train.architectures.embeddings.ResNet
          init_args: 
            layers: [4, 4]
            norm_layer:
              class_path: ml4gw.nn.norm.GroupNorm1DGetter
              init_args:
                groups: 16
    patience: null
    save_top_k_models: 10
    learning_rate: 1e-3
    weight_decay: 1e-7
data:
  class_path: train.data.generator.CBCGeneratorDataset
  init_args:
    approximant: ml4gw.waveforms.IMRPhenomD
    f_min: 20
    f_max: 1024
    f_ref: 40
    padding: 1.0
    inference_params: ["chirp_mass", "mass_ratio", "distance", "phic",  "inclination", "dec", "psi", "phi"] 
    data_dir: "/home/ethan.marx/projects/PE/projects/sandbox/train/datadir_tmp/"
    val_stride: 0.0625 
    sample_rate: 2048
    kernel_length: 4
    fduration: 1
    psd_length: 10
    highpass: 32
    batches_per_epoch: 200
    batch_size: 512
    ifos: ["H1", "L1"]
    parameter_sampler: train.priors.cbc_prior
    dec: 
      class_path: ml4gw.distributions.Cosine
    psi: 
      class_path: torch.distributions.Uniform
      init_args:
        low: 0
        high: 3.14 
    phi: 
      class_path: torch.distributions.Uniform
      init_args:
        low: -3.14
        high: 3.14
    min_valid_duration: 10000.0
