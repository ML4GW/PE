[tool.pinto]
steps = [
    "data_generation:generate-background",
    "data_generation:generate-waveforms",
    "data_generation:generate-flow-injections",
    "data_generation:generate-bilby-injections",
    "train:train:maf",
    "sample_with_flow:sample-with-flow:maf"
]

[tool.typeo.base]
basedir = "${BASE_DIR}"
datadir = "${DATA_DIR}"
logdir = "${BASE_DIR}/log"
sample_rate = 2048
ifos = ['H1', 'L1']
inference_params = ["frequency", "quality", "hrss", "phase", "dec", "psi", "ra"]
trigger_distance = 0.0
start = 1262044818
stop = 1262088018
test_stop = 1262100018
channel = "DCS-CALIB_STRAIN_CLEAN_C01"
frame_type = "HOFT_C01"
prior = "mlpe.injection.priors.sg_uniform"
state_flag = "DCS-ANALYSIS_READY_C01:1"
repository_directory = "${BASE_DIR}/model_repo/" 
force_generation = false
kernel_length = 2
highpass = 32
fduration = 1
waveform_duration = 8
coupling = {num_flow_steps = 10}
maf = {num_transforms = 10}
bilby_duration = 4


[tool.typeo.scripts.generate-background]
datadir = "${base.datadir}"
logdir = "${base.logdir}"
channel = "${base.channel}"
frame_type = "${base.frame_type}"
state_flag = "${base.state_flag}"
start = "${base.start}" 
stop = "${base.stop}" 
ifos = "${base.ifos}"
sample_rate = "${base.sample_rate}" 
minimum_length = 10000
force_generation = "${base.force_generation}"
waveform_duration = "${base.waveform_duration}" # used for delta f of psd
gaussian = true

[tool.typeo.scripts.generate-waveforms]
datadir = "${base.datadir}"
logdir = "${base.logdir}"
n_samples = 10000
sample_rate = "${base.sample_rate}" 
force_generation = "${base.force_generation}"
waveform = "mlpe.injection.waveforms.sine_gaussian_frequency"
waveform_duration = "${base.waveform_duration}"
prior = "${base.prior}"

[tool.typeo.scripts.train]
waveform_dataset = "${base.datadir}/signals.h5"
background_path = "${base.datadir}/background.h5" 
logdir = "${base.logdir}"
outdir = "${base.basedir}/training"
inference_params = "${base.inference_params}"
optimizer_fn = "torch.optim.Adam"

ifos = "${base.ifos}"
kernel_length = "${base.kernel_length}"
sample_rate = "${base.sample_rate}"
fduration = "${base.fduration}"
highpass = 32 
trigger_distance = "${base.trigger_distance}"
batch_size = 512
batches_per_epoch = 200
max_epochs = 300

lr = 4e-3

early_stop = 30

device = "cuda"
profile = false
use_amp = false
valid_frac = 0.25
valid_stride = 0.0625

# arch parameters
#commands.coupling = "${base.coupling}"
commands.maf = "${base.maf}"


[tool.typeo.scripts.generate-flow-injections]
ifos = "${base.ifos}"
state_flag = "${base.state_flag}"
frame_type = "${base.frame_type}"
channel = "${base.channel}"
start = "${base.stop}"
stop = "${base.test_stop}" 
sample_rate = "${base.sample_rate}"
prior = "${base.prior}"
waveform = "mlpe.injection.waveforms.sine_gaussian_frequency"
n_samples = 5000
kernel_length = "${base.kernel_length}"
waveform_duration = "${base.waveform_duration}"
datadir = "${base.datadir}"
logdir = "${base.logdir}"
gaussian = false

[tool.typeo.scripts.generate-bilby-injections]
bilby_duration = "${base.bilby_duration}"
ifos = "${base.ifos}"
state_flag = "${base.state_flag}"
frame_type = "${base.frame_type}"
channel = "${base.channel}"
start = "${base.stop}"
stop = "${base.test_stop}"
sample_rate = "${base.sample_rate}"
prior = "mlpe.injection.priors.sg_uniform"
waveform = "mlpe.injection.waveforms.sine_gaussian_frequency"
n_samples = 8
waveform_duration = "${base.waveform_duration}"
spacing = 100
buffer = 10
datadir = "${base.datadir}"
logdir = "${base.logdir}"
gaussian = false

[tool.typeo.scripts.sample-with-flow]
ifos = "${base.ifos}"
kernel_length = "${base.kernel_length}"
sample_rate = "${base.sample_rate}"
fduration = "${base.fduration}"
model_state_path = "${base.basedir}/training/weights.pt"
inference_params = "${base.inference_params}"
preprocessor_dir = "${base.basedir}/training/preprocessor"
writedir = "${base.basedir}"
datadir = "${base.datadir}"
logdir = "${base.logdir}"
num_samples_draw = 10000
device = "cuda"
channel = "${base.channel}"
basedir = "${base.basedir}"

# arch parameters
commands.coupling = "${base.coupling}"
commands.maf = "${base.maf}"
